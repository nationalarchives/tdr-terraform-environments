name: 'Terraform plan'
on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: The environment to deploy against.
        type: string
        default: staging
permissions:
  id-token: write
  contents: write
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      account-number-secret: ${{ steps.set-environment-names.outputs.account_number_secret }}
      title-environment: ${{ steps.set-environment-names.outputs.title_environment }}
    steps:
      - id: set-environment-names
        run: |
          env = "${{ github.event.inputs.environment }}"
          print(f"::set-output name=account_number_secret::{env.upper()}_ACCOUNT")
          print(f"::set-output name=title_environment::{env.title()}")
        shell: python
  plan:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.WORKFLOW_PAT }}
      - name: Configure AWS credentials for Lambda
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT }}:role/TDRGithubTerraformAssumeRole${{ needs.setup.outputs.title-environment }}
          aws-region: eu-west-2
          role-session-name: TerraformRole
      - name: Terraform Plan
        id: plan
        env:
          GITHUB_OWNER: nationalarchives
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
          TF_VAR_tdr_account_number: ${{ secrets[needs.setup.outputs.account-number-secret] }}
        run: |
            terraform init
            terraform workspace select ${{ github.event.inputs.environment }}
            pip install boto3
            terraform plan -no-color -out=out > /dev/null
            terraform show -no-color out > out.plan
            python .github/scripts/logs.py out.plan "${{ github.run_id }}${{ github.run_attempt }}" ${{ github.event.inputs.environment }}
      - uses: nationalarchives/tdr-github-actions/.github/actions/slack-send@add-terraform-check
        with:
          message: |
              :book: Terraform plan ready for environment ${{ github.event.inputs.environment }}
              :log: View the [plan logs](${{ steps.plan.outputs.log-url }}) in the management account.
              :white_check_mark: [Approve the workflow](https://github.com/nationalarchives/tdr-terraform-environments/actions/runs/${{ github.run_id }})
          slack-url: ${{ secrets.SLACK_WEBHOOK }}
  apply:
    runs-on: ubuntu-latest
    needs:
      - plan
      - setup
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.WORKFLOW_PAT }}
      - name: Configure AWS credentials for Lambda
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT }}:role/TDRGithubTerraformAssumeRole${{ needs.setup.outputs.title-environment }}
          aws-region: eu-west-2
          role-session-name: TerraformRole
      - name: Run apply
        run: |
            terraform init
            terraform workspace select ${{ github.event.inputs.environment }}
            echo "terraform apply --auto-approve"
